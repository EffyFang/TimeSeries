jia_test_weekly = window(jia_weekly, start = c(114,1), end = c(115,5))
shen_train_weekly = window(shen_weekly, start = c(1,1), end = c(113,7))
shen_test_weekly = window(shen_weekly, start = c(114,1), end = c(115,5))
var_data = window(ts.union(jia_train_weekly, lan_train_weekly))
model_var = VAR(y = var_data, p = 2)
pred = predict(model_var, h = 12)
AIC(VAR(y = var_data, p = 2))
ts.plot(lan)
acf(lan)
pacf(lan)
model_auto = auto.arima(lan_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
lambda = model_auto$lambda[1]
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
pred = forecast(model_auto, h = 12)
accuracy(pred, lan_test_weekly)
plot(pred)
autoplot(lan_train_weekly) +
autolayer(pred, series="SARIMA")+
autolayer(lan_test_weekly,series = "SARIMA", color = "Blue") +
ggtitle("Condmilk") +
xlab("Year") + ylab("Stocks")
autoplot() +
autolayer(pred, series="SARIMA")+
autolayer(lan_test_weekly,series = "SARIMA", color = "Blue") +
ggtitle("Condmilk") +
xlab("Year") + ylab("Stocks")
autoplot(lan_train_weekly[700:791]) +
autolayer(pred, series="SARIMA")+
autolayer(lan_test_weekly,series = "SARIMA", color = "Blue") +
ggtitle("Condmilk") +
xlab("Year") + ylab("Stocks")
lan_train_weekly[700:791]
plot(pred)
plot(pred, include = 100)
plot(pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
autoplot(pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
jia_daily = ts(as.numeric(df1[,2]), frequency = 365)
lan_daily = ts(as.numeric(df1[,1]), frequency = 365)
shen_daily = ts(as.numeric(df1[,3]), frequency = 365)
jia_weekly = ts(as.numeric(df1[,2]), frequency = 7)
lan_weekly = ts(as.numeric(df1[,1]), frequency = 7)
shen_weekly = ts(as.numeric(df1[,3]), frequency = 7)
lan_train_weekly = window(lan_weekly, start = c(1,1), end = c(113,7))
lan_test_weekly = window(lan_weekly, start = c(114,1), end = c(115,5))
jia_train_weekly = window(jia_weekly, start = c(1,1), end = c(113,7))
jia_test_weekly = window(jia_weekly, start = c(114,1), end = c(115,5))
shen_train_weekly = window(shen_weekly, start = c(1,1), end = c(113,7))
shen_test_weekly = window(shen_weekly, start = c(114,1), end = c(115,5))
model_auto = auto.arima(lan_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
lambda = model_auto$lambda[1]
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
pred = forecast(model_auto, h = 12)
accuracy(pred, lan_test_weekly)
autoplot(pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
jia_weekly = ts(as.numeric(df1[,2]), frequency = 7)
lan_weekly = ts(as.numeric(df1[,1]), frequency = 7)
shen_weekly = ts(as.numeric(df1[,3]), frequency = 7)
lan_train_weekly = window(lan_weekly, start = c(1,1), end = c(113,7))
lan_test_weekly = window(lan_weekly, start = c(114,1), end = c(115,5))
jia_train_weekly = window(jia_weekly, start = c(1,1), end = c(113,7))
jia_test_weekly = window(jia_weekly, start = c(114,1), end = c(115,5))
shen_train_weekly = window(shen_weekly, start = c(1,1), end = c(113,7))
shen_test_weekly = window(shen_weekly, start = c(114,1), end = c(115,5))
lan_train_weekly
lan_test_weekly
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
var_data = window(ts.union(jia_train_weekly, lan_train_weekly))
model_var = VAR(y = var_data, p = 2)
pred = predict(model_var, h = 12)
AIC(VAR(y = var_data, p = 2))
pred
pred_jia = pred[1]
pred_jia
pred_jia = pred$fcst$jia_train_weekly
pred_jia
accuracy(pred, jia_test_weekly)
accuracy(pred, lan_test_weekly)
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
accuracy(pred, lan_test_weekly)
pred_jia = pred$fcst$jia_train_weekly[1]
pred$fcst$jia_train_weekly[1]
pred_jia = pred$fcst$jia_train_weekly
pred$fcst$jia_train_weekly
var_data = window(ts.union(jia_train_weekly, lan_train_weekly))
model_var = VAR(y = var_data, p = 2)
pred = predict(model_var, h = 12)
pred_jia = pred$fcst$jia_train_weekly
pred_jia
pred_jia = pred$fcst$jia_train_weekly[,1]
pred_jia
pred$fcst$jia_train_weekly
autoplot(pred_jia, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
pred_jia = ts(pred_jia)
autoplot(pred_jia, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
jia_test_weekly
pred_jia = pred$fcst$jia_train_weekly[,1]
pred_jia = ts(pred_jia, start = c(114, 1), end = c(115,5), frequency = 7)
autoplot(pred_jia, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
pred_lan = pred$fcst$lan_train_weekly[,1]
pred_lan = ts(pred_lan, start = c(114, 1), end = c(115,5), frequency = 7)
autoplot(pred_lan, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
var_data = window(ts.union(shen_train_weekly, lan_train_weekly))
model_var = VAR(y = var_data, p = 2)
pred = predict(model_var, h = 12)
pred_shen = pred$fcst$shen_train_weekly[,1]
pred_shen = ts(pred_shen, start = c(114, 1), end = c(115,5), frequency = 7)
autoplot(pred_shen, include = 100)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
pred_lan = pred$fcst$lan_train_weekly[,1]
pred_lan = ts(pred_lan, start = c(114, 1), end = c(115,5), frequency = 7)
autoplot(pred_lan, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
autoplot(pred_lan)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
autoplot()+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
autoplot(pred_lan)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
var_data = window(ts.union(shen_train_weekly, lan_train_weekly))
model_var = VAR(y = var_data, p = 2)
pred = predict(model_var, h = 12)
pred_shen = pred$fcst$shen_train_weekly[,1]
pred_shen = ts(pred_shen, start = c(114, 1), end = c(115,5), frequency = 7)
autoplot(pred_shen, include = 100)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
pred_lan = pred$fcst$lan_train_weekly[,1]
pred_lan = ts(pred_lan, start = c(114, 1), end = c(115,5), frequency = 7)
autoplot(pred_lan)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
```{r}
checkresiduals(model_auto)
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE, D = 1)
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE, D = 1)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
autoplot(pred, include = 50)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
checkresiduals(model_auto)
autoplot(pred, include = 10)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
autoplot(pred, include = 12)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_daily, lambda = "auto", seasonal = TRUE, D = 1)
jia_train_daily = window(jia_daily, start = c(1,1), end = c(113,7))
jia_test_dailyy = window(jia_daily, start = c(114,1), end = c(115,5))
jia_train_daily = window(jia_daily, start = c(1,1), end = c(113,7))
jia_test_daily = window(jia_daily, start = c(114,1), end = c(115,5))
jia_daily
jia_train_daily = window(jia_daily, start = c(1,1), end = c(3,60))
jia_test_daily = window(jia_daily, start = c(3,61), end = c(3,73))
model_auto = auto.arima(jia_train_daily, lambda = "auto", seasonal = TRUE, D = 1)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 13)
accuracy(pred, jia_test_weekly)
accuracy(pred, jia_test_daily)
autoplot(pred, include = 13)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
pred = forecast(model_auto, h = 13)
accuracy(pred, jia_test_daily)
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
jia_train_daily = window(jia_daily, start = c(1,1), end = c(3,61))
jia_test_daily = window(jia_daily, start = c(3,62), end = c(3,73))
model_auto = auto.arima(jia_train_daily, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_daily)
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 12)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
eacf(jia_train_weekly)
model_auto = Arima(jia_train_weekly, lambda = "auto", p = 1, q = 2)
eacf(jia_train_weekly)
model_auto = Arima(jia_train_weekly, lambda = "auto", order=c(1,1,2))
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 12)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
eacf(jia_train_weekly)
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
#model_auto = Arima(jia_train_weekly, lambda = "auto", order=c(1,1,2))
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 12)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
eacf(jia_train_weekly)
#model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto = Arima(jia_train_weekly, lambda = "auto", order=c(1,1,2))
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 12)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
model_xreg = auto.arima(lan1, xreg=shen1)
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, h = 12)
pred = predi(model_xreg, h = 12)
pred = predict(model_xreg, h = 12)
pred = forecast(model_xreg, h = 12)
harmonics = fourier(shen_train_weekly, K =3)
harmonics
fit = auto.arima(model_xreg, xreg = harmonics, seasonal = TRUE)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =1)
fit = auto.arima(model_xreg, xreg = harmonics, seasonal = TRUE)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =1)
fit = auto.arima(model_xreg, xreg = harmonics, seasonal = FALSE)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =3)
fit = auto.arima(model_xreg, xreg = harmonics, seasonal = FALSE)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =3)
fit = auto.arima(lan_train_weekly, xreg = harmonics, seasonal = FALSE)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =3)
fit = auto.arima(lan_train_weekly, xreg = harmonics, seasonal = FALSE)
new_harmonics = fourier(shen_train_weekly, K =3, h = 12)
pred = forecast(fit, xreg = new_harmonics)
accuracy(pred, shen_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
autoplot(pred, include = 100)+
autolayer(shen_test_daily,series = "SARIMA", color = "red")
autoplot(pred, include = 100)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
autoplot(pred, include = 10)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
library(fpp2)
harmonics = fourier(shen_train_weekly, K =5)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =1)
fit = auto.arima(lan_train_weekly, xreg = harmonics, seasonal = FALSE)
new_harmonics = fourier(shen_train_weekly, K =1, h = 12)
pred = forecast(fit, xreg = new_harmonics)
accuracy(pred, shen_test_weekly)
autoplot(pred, include = 10)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
library(fpp2)
harmonics = fourier(shen_train_weekly, K =3)
fit = auto.arima(lan_train_weekly, xreg = harmonics, seasonal = FALSE)
new_harmonics = fourier(shen_train_weekly, K =3, h = 12)
pred = forecast(fit, xreg = new_harmonics)
accuracy(pred, shen_test_weekly)
autoplot(pred, include = 10)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
ts.plot(jia)
acf(jia)
pacf(jia)
ts.plot(shen)
acf(shen)
pacf(shen)
model_auto = auto.arima(jia_train_daily, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_daily)
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_daily, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
Acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_daily)
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
model_auto$coef
Acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
tbats(jia_train_weekly)
library(fpp2)
harmonics = fourier(shen_train_weekly, K =2)
fit = auto.arima(lan_train_weekly, xreg = harmonics, seasonal = FALSE)
new_harmonics = fourier(shen_train_weekly, K =2, h = 12)
pred = forecast(fit, xreg = new_harmonics)
accuracy(pred, shen_test_weekly)
autoplot(pred, include = 10)+
autolayer(shen_test_weekly,series = "SARIMA", color = "red")
tbats(shen_train_weekly)
temp = tbats(shen_train_weekly)
checkresiduals(temp)
temp = tbats(jia_train_weekly)
checkresiduals(temp)
# use partial lag, lag = 0.111  TBATS
model_auto = auto.arima(log(jia_train_weekly),  seasonal = TRUE)
model_auto
model_auto$coef
Acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
autoplot(exp(pred), include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
autoplot(exp(pred$mean), include = 100)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
autoplot(exp(pred$mean))+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xre = , h = 12)
pred = forecast(model_xreg, xre = shen_test_weekly, h = 12)
accuracy(pred, jia_test_daily)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 100)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
autoplot(pred)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
autoplot(pred, include = 10)+
autolayer(jia_test_daily,series = "SARIMA", color = "red")
autoplot(pred, include = 10)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
plot(lan_train_weekly)
autoplot(lan_train_weekly)+
atuolayer(lan_test_weekly)
autoplot(lan_train_weekly)+
autolayer(lan_test_weekly)
lan_train_weekly = window(lan_weekly, start = c(1,1), end = c(112,7))
lan_test_weekly = window(lan_weekly, start = c(113,1), end = c(115,5))
autoplot(lan_train_weekly)+
autolayer(lan_test_weekly)
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
lan_test_weekly = window(lan_weekly, start = c(113,1), end = c(115,5))
jia_train_weekly = window(jia_weekly, start = c(1,1), end = c(112,7))
jia_test_weekly = window(jia_weekly, start = c(113,1), end = c(115,5))
lan_train_weekly = window(lan_weekly, start = c(1,1), end = c(112,7))
lan_test_weekly = window(lan_weekly, start = c(113,1), end = c(115,5))
jia_train_weekly = window(jia_weekly, start = c(1,1), end = c(112,7))
jia_test_weekly = window(jia_weekly, start = c(113,1), end = c(115,5))
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
shen_train_weekly = window(shen_weekly, start = c(1,1), end = c(112,7))
shen_test_weekly = window(shen_weekly, start = c(113,1), end = c(115,5))
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xre = shen_test_weekly, h = 19)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 10)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
autoplot(pred, include = 10)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
model_xreg
checkresiduals(model_xreg)
stop()
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(caret)
library(TSA)
library(pls)
library(forecast)
library(tseries)
library(vars)
df = readRDS("~/GitHub/TimeSeries-Project/TSProject/new_train.rds")
df1 = df[,10:12]
lan = as.numeric(df1[,1])
jia = as.numeric(df1[,2])
shen = as.numeric(df1[,3])
## use log rather than auto lambda
jia_daily = ts(as.numeric(df1[,2]), frequency = 365)
lan_daily = ts(as.numeric(df1[,1]), frequency = 365)
shen_daily = ts(as.numeric(df1[,3]), frequency = 365)
jia_weekly = ts(as.numeric(df1[,2]), frequency = 7)
lan_weekly = ts(as.numeric(df1[,1]), frequency = 7)
shen_weekly = ts(as.numeric(df1[,3]), frequency = 7)
lan_train_weekly = window(lan_weekly, start = c(1,1), end = c(112,7))
lan_test_weekly = window(lan_weekly, start = c(113,1), end = c(115,5))
jia_train_weekly = window(jia_weekly, start = c(1,1), end = c(112,7))
jia_test_weekly = window(jia_weekly, start = c(113,1), end = c(115,5))
jia_train_daily = window(jia_daily, start = c(1,1), end = c(3,61))
jia_test_daily = window(jia_daily, start = c(3,62), end = c(3,73))
shen_train_weekly = window(shen_weekly, start = c(1,1), end = c(112,7))
shen_test_weekly = window(shen_weekly, start = c(113,1), end = c(115,5))
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xre = shen_test_weekly, h = 19)
accuracy(pred, lan_test_weekly)
autoplot(pred, include = 10)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
model_xreg = auto.arima(lan_train_weekly, xreg=shen_train_weekly,lambda = "auto")
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xre = shen_test_weekly, h = 19)
accuracy(pred, lan_test_weekly)
autoplot(pred, include = 10)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
temp = tbats(jia_train_weekly)
checkresiduals(temp)
summary(temp)
temp
temp = tbats(lan_train_weekly)
checkresiduals(temp)
temp
