autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
tbats_kidney = tbats(kidney_train_weekly)
tbats_kidney
checkresiduals(tbats_kidney)
pred = forecast(tbats_kidney, h = 19)
acc_tbats = accuracy(pred, kidney_test_weekly)
acc_tbats
autoplot(pred$mean, include = 100)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
model_arfima = arfima(kidney_transformed_train)
summary(model_arfima)
checkresiduals(model_arfima)
pred = forecast(model_arfima, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arimfa = accuracy(inv_pred, kidney_test_weekly)
acc_arimfa
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
tbats_kidney = tbats(kidney_train_weekly)
tbats_kidney
checkresiduals(tbats_kidney)
pred = forecast(tbats_kidney, h = 19)
acc_tbats = accuracy(pred, kidney_test_weekly)
acc_tbats
autoplot(pred$mean, include = 100)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
model_arfima = arfima(kidney_transformed_train)
summary(model_arfima)
checkresiduals(model_arfima)
pred = forecast(model_arfima, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arimfa = accuracy(inv_pred, kidney_test_weekly)
acc_arimfa
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
model_arfima = arfima(kidney_transformed_train)
summary(model_arfima)
checkresiduals(model_arfima)
pred = forecast(model_arfima, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arimfa = accuracy(inv_pred, kidney_test_weekly)
acc_arimfa
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "ARFIMA", color = "red")
model_xreg = auto.arima(kidney_transformed_train, xreg = append_transformed_train  ,seasonal = TRUE)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xreg = append_transformed_test, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
#accuracy(pred, kidney_transformed_test)
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "XREG", color = "red")
model_xreg = auto.arima(kidney_transformed_train, xreg = append_transformed_train  ,seasonal = TRUE)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xreg = append_transformed_test, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_xreg = accuracy(inv_pred, kidney_test_weekly)
acc_xreg
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "XREG", color = "red")
model_xreg = auto.arima(kidney_transformed_train, xreg = append_transformed_train  ,seasonal = TRUE)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xreg = append_transformed_test, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_xreg = accuracy(inv_pred, kidney_test_weekly)
acc_xreg
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "XREG", color = "red")
library(fpp2)
harmonics = fourier(kidney_transformed_train, K =2)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =2, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
harmonics = fourier(kidney_transformed_train, K =2)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =2, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_fourier = accuracy(inv_pred, kidney_test_weekly)
acc_fourier
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
harmonics = fourier(kidney_transformed_train, K =3)
harmonics = fourier(kidney_transformed_train, K =3)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =3, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_fourier = accuracy(inv_pred, kidney_test_weekly)
acc_fourier
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
harmonics = fourier(kidney_transformed_train, K =1)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =1, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_fourier = accuracy(inv_pred, kidney_test_weekly)
acc_fourier
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
harmonics = fourier(kidney_transformed_train, K =4)
harmonics = fourier(kidney_transformed_train, K =3)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =3, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_fourier = accuracy(inv_pred, kidney_test_weekly)
acc_fourier
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
acc_atuo[,2]
model_arfima = arfima(kidney_transformed_train)
summary(model_arfima)
checkresiduals(model_arfima)
pred = forecast(model_arfima, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arfima = accuracy(inv_pred, kidney_test_weekly)
acc_arfima
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "ARFIMA", color = "red")
rmse <- c(auto_arima=acc_atuo[,2], model_Arima=acc_arima[,2], TBATS = acc_tbats[,2],
model_arfima=acc_arfima[,2], fourier = acc_fourier[,2] , xreg=acc_xreg[,2])
rmse
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','fourier', 'Regression with arima error'))
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','fourier', 'Regression with arima error'))
rmse
aicc
aicc <- cbind(auto_arima=arima_auto_append$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=model_arfima$aicc, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=model_arfima$aicc, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
data <- rbind(aicc,rmse)
aicc
rmse
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=model_arfima$aicc, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
model_arfima$aicc
model_arfima
model_arfima
summar(model_arfima)
summary(model_arfima)
temp = summary(model_arfima)
temp$aic
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=summary(model_arfima)$aic, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
sort(aicc)
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=summary(model_arfima)$aic, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
sort(aicc)
rmse <- c(auto_arima=acc_atuo[,2], model_Arima=acc_arima[,2], TBATS = acc_tbats[,2],
model_arfima=acc_arfima[,2], fourier = acc_fourier[,2] , xreg=acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','fourier', 'Regression with arima error'))
colnames(comparison)<-c('aic', 'rmse')
comparison[order(comparison$rmse),]
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=summary(model_arfima)$aic, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
sort(aicc)
rmse <- c(auto_arima=acc_atuo[,2], model_Arima=acc_arima[,2], TBATS = acc_tbats[,2],
model_arfima=acc_arfima[,2], fourier = acc_fourier[,2] , xreg=acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$rmse),]
comparison[order(comparison$rmse),]
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=summary(model_arfima)$aic, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
sort(aicc)
rmse <- c(auto_arima=acc_atuo[,2], model_Arima=acc_arima[,2], TBATS = acc_tbats[,2],
model_arfima=acc_arfima[,2], fourier = acc_fourier[,2] , xreg=acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
tbats_kidney = tbats(kidney_diff_train)
tbats_kidney
checkresiduals(tbats_kidney)
pred = forecast(tbats_kidney, h = 19)
act_pred = append(kidney_train_weekly[784],pred$mean)
act_pred = cumsum(act_pred)
act_pred = act_pred[2:20]
act_pred = ts(act_pred, frequency = 7, start = c(113,1), end = c(115,5))
#act_pred = window(act_pred, start = c(113,1), end = c(115,5))
accuracy(act_pred, kidney_test_weekly)
autoplot(act_pred, include = 100)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
checkresiduals(model_arfima)
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=summary(model_arfima)$aic, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
sort(aicc)
rmse <- c(auto_arima=acc_atuo[,2], model_Arima=acc_arima[,2], TBATS = acc_tbats[,2],
model_arfima=acc_arfima[,2], fourier = acc_fourier[,2] , xreg=acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(caret)
library(TSA)
library(pls)
library(forecast)
library(tseries)
library(vars)
library(MASS)
library(fpp2)
df = readRDS("~/GitHub/TimeSeries-Project/TSProject/new_train.rds")
df1 = df[,10:12]
append = as.numeric(df1[,1])
kidney = as.numeric(df1[,3])
ts.plot(kidney)
Acf(kidney)
## Use the last 19 data points as the test data set
append_weekly = ts(append, frequency = 7)
kidney_weekly = ts(kidney, frequency = 7)
append_train_weekly = window(append_weekly, start = c(1,1), end = c(112,7))
append_test_weekly  = window(append_weekly, start = c(113,1), end = c(115,5))
kidney_train_weekly = window(kidney_weekly, start = c(1,1), end = c(112,7))
kidney_test_weekly  = window(kidney_weekly, start = c(113,1), end = c(115,5))
kidney_diff_train = window(diff(kidney_weekly), start = c(1,2), end = c(112,7))
kidney_diff_test = window(diff(kidney_weekly), start = c(113,1), end = c(115,5))
append_diff_train = window(diff(append_weekly), start = c(1,2), end = c(112,7))
append_diff_test = window(diff(append_weekly), start = c(113,1), end = c(115,5))
##
append_lambda = BoxCox.lambda(append_train_weekly)
append_transformed_train = BoxCox(append_train_weekly, lambda = append_lambda)
append_transformed_test = BoxCox(append_test_weekly, lambda = append_lambda)
kidney_lambda = BoxCox.lambda(kidney_train_weekly)
kidney_transformed_train = BoxCox(kidney_train_weekly, lambda = kidney_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidney_test_weekly)
kidney_transformed_test = BoxCox(kidney_test_weekly, lambda = kidney_lambda)
autoplot(kidney_transformed_train)+
autolayer(kidney_transformed_test)
adf.test(append_transformed_train) # small
kpss.test(append_transformed_train) # level is not stationary  big
adf.test(diff(append_transformed_train)) # small
kpss.test(diff(append_transformed_train)) # level is not stationary  big
plot(diff(append_transformed_train))
adf.test(diff(append_train_weekly)) # small
kpss.test(diff(append_train_weekly)) # level is not stationary  big
adf.test(append_transformed_train) # p-value need to be less than 0.05
kpss.test(append_transformed_train) # p-value need to be greater than 0.05
adf.test(diff(append_transformed_train)) # small
kpss.test(diff(append_transformed_train)) # level is not stationary  big
plot(diff(append_transformed_train))
adf.test(diff(append_train_weekly)) # small
kpss.test(diff(append_train_weekly)) # level is not stationary  big
# After 1st differencing, the data set is stationary. Thus, set d = 1, and there is strong seasonality trend observed.
arima_atuo_kidney = auto.arima(kidney_transformed_train, d = 1, seasonal = T)
arima_atuo_kidney
# Ljung-Box test need to be greater than 0.05
checkresiduals(arima_atuo_kidney)
pred = forecast(arima_atuo_kidney, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_atuo = accuracy(inv_pred, kidney_test_weekly)
acc_atuo
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly,series = "Auto_ARIMA", color = "red")
eacf(kidney_transformed_train)
arima_kidney = Arima(kidney_transformed_train, order = c(1,1,2), seasonal = c(1, 0, 2))
arima_kidney
arima_kidney$coef
# Ljung-Box big
checkresiduals(arima_kidney)
pred = forecast(arima_kidney, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arima = accuracy(inv_pred, kidney_test_weekly)
acc_arima
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
tbats_kidney = tbats(kidney_train_weekly)
tbats_kidney
checkresiduals(tbats_kidney)
pred = forecast(tbats_kidney, h = 19)
acc_tbats = accuracy(pred, kidney_test_weekly)
acc_tbats
autoplot(pred$mean, include = 100)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
model_arfima = arfima(kidney_transformed_train)
summary(model_arfima)
checkresiduals(model_arfima)
pred = forecast(model_arfima, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arfima = accuracy(inv_pred, kidney_test_weekly)
acc_arfima
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "ARFIMA", color = "red")
model_xreg = auto.arima(kidney_transformed_train, xreg = append_transformed_train  ,seasonal = TRUE)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xreg = append_transformed_test, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_xreg = accuracy(inv_pred, kidney_test_weekly)
acc_xreg
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "XREG", color = "red")
harmonics = fourier(kidney_transformed_train, K =3)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =3, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_fourier = accuracy(inv_pred, kidney_test_weekly)
acc_fourier
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
var_data = window(ts.union(diff(kidney_transformed_train), diff(append_transformed_train)))
model_var = VAR(y = var_data, p = 2)
model_var
pred = forecast(model_var, h = 19)
pred_kidney = pred$forecast$diff.kidney_transformed_train.$mean
pred_kidney = ts(pred_kidney, start = c(113,1), end = c(115,5), frequency = 7)
act_pred = append(kidney_transformed_train[784],pred_kidney)
act_pred = cumsum(act_pred)
act_pred = act_pred[2:20]
inv_pred = InvBoxCox(act_pred, lambda = kidney_lambda)
inv_pred = ts(inv_pred, start = c(113,1), end = c(115,5), frequency = 7)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
aicc <- cbind(auto_arima=arima_atuo_kidney$aicc, model_Arima=arima_kidney$aicc, TBATS = tbats_kidney$AIC,
model_arfima=summary(model_arfima)$aic, fourier = model_fourier$aicc , xreg=model_xreg$aicc)
aicc
sort(aicc)
rmse <- c(auto_arima=acc_atuo[,2], model_Arima=acc_arima[,2], TBATS = acc_tbats[,2],
model_arfima=acc_arfima[,2], fourier = acc_fourier[,2] , xreg=acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
acc_arima
acc_arfima
aicc <- cbind(arima_atuo_kidney$aicc, arima_kidney$aicc, tbats_kidney$AIC,
summary(model_arfima)$aic, model_fourier$aicc , model_xreg$aicc)
aicc
sort(aicc)
rmse <- c(acc_atuo[,2], acc_arima[,2], acc_tbats[,2],
acc_arfima[,2], acc_fourier[,2], acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
acc_arfima[,2]
rmse
rmse
aicc
data <- rbind(aicc,rmse)
aicc <- cbind(arima_atuo_kidney$aicc, arima_kidney$aicc, tbats_kidney$AIC,
summary(model_arfima)$aic, model_fourier$aicc , model_xreg$aicc)
aicc
#sort(aicc)
rmse <- c(acc_atuo[,2], acc_arima[,2], acc_tbats[,2],
acc_arfima[,2], acc_fourier[,2], acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
data
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
comparison
aicc <- cbind(arima_atuo_kidney$aicc, arima_kidney$aicc, tbats_kidney$AIC,
summary(model_arfima)$aic, model_fourier$aicc , model_xreg$aicc)
aicc
#sort(aicc)
rmse <- c(acc_atuo[,2], acc_arima[,2], acc_tbats[,2],
acc_arfima[,2], acc_fourier[,2], acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
acc_tbats
acc_tbats[2,2]
aicc <- cbind(arima_atuo_kidney$aicc, arima_kidney$aicc, tbats_kidney$AIC,
summary(model_arfima)$aic, model_fourier$aicc , model_xreg$aicc)
aicc
#sort(aicc)
rmse <- c(acc_atuo[,2], acc_arima[,2], acc_tbats[2,2],
acc_arfima[,2], acc_fourier[,2], acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
arima_kidney = Arima(kidney_transformed_train, order = c(1,1,2), seasonal = c(1, 0, 2))
arima_kidney
arima_kidney$coef
# Ljung-Box test need to be greater than 0.05
checkresiduals(arima_kidney)
pred = forecast(arima_kidney, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arima = accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
arima_kidney = Arima(kidney_transformed_train, order = c(1,1,2), seasonal = c(1, 0, 2))
arima_kidney
arima_kidney$coef
# Ljung-Box test need to be greater than 0.05
checkresiduals(arima_kidney)
pred = forecast(arima_kidney, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arima = accuracy(inv_pred, kidney_test_weekly)
acc_arima
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
tbats_kidney = tbats(kidney_train_weekly)
tbats_kidney
checkresiduals(tbats_kidney)
pred = forecast(tbats_kidney, h = 19)
acc_tbats = accuracy(pred, kidney_test_weekly)
acc_tbats
autoplot(pred$mean, include = 100)+
autolayer(kidney_test_weekly,series = "tbats", color = "red")
model_arfima = arfima(kidney_transformed_train)
summary(model_arfima)
checkresiduals(model_arfima)
pred = forecast(model_arfima, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_arfima = accuracy(inv_pred, kidney_test_weekly)
acc_arfima
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "ARFIMA", color = "red")
model_xreg = auto.arima(kidney_transformed_train, xreg = append_transformed_train  ,seasonal = TRUE)
model_xreg
checkresiduals(model_xreg)
pred = forecast(model_xreg, xreg = append_transformed_test, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_xreg = accuracy(inv_pred, kidney_test_weekly)
acc_xreg
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "XREG", color = "red")
harmonics = fourier(kidney_transformed_train, K =3)
model_fourier = auto.arima(kidney_transformed_train, xreg = harmonics, seasonal = FALSE)
checkresiduals(model_fourier)
summary(model_fourier)
new_harmonics = fourier(kidney_transformed_train, K =3, h = 19)
pred = forecast(model_fourier, xreg = new_harmonics)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
acc_fourier = accuracy(inv_pred, kidney_test_weekly)
acc_fourier
autoplot(inv_pred, include = 10)+
autolayer(kidney_test_weekly,series = "SARIMA", color = "red")
aicc <- cbind(arima_atuo_kidney$aicc, arima_kidney$aicc, tbats_kidney$AIC,
summary(model_arfima)$aic, model_fourier$aicc , model_xreg$aicc)
aicc
#sort(aicc)
rmse <- c(acc_atuo[,2], acc_arima[,2], acc_tbats[2,2],
acc_arfima[,2], acc_fourier[,2], acc_xreg[,2])
rmse
data <- rbind(aicc,rmse)
comparison <- as.data.frame(t(data),row.name=c('Auto_arima','SARIMA','TBATS','ARFIMA','Fourier', 'Regression with arima error'))
colnames(comparison)<-c('AICC', 'RMSE')
comparison[order(comparison$RMSE),]
# load libraries
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('grid') # visualisation
library('gridExtra') # visualisation
library('corrplot') # visualisation
library('ggrepel') # visualisation
library('RColorBrewer') # visualisation
library('data.table') # data manipulation
library('dplyr') # data manipulation
library('readr') # data input
library('tibble') # data wrangling
library('tidyr') # data wrangling
library('lazyeval') # data wrangling
library('broom') # data wrangling
library('stringr') # string manipulation
library('purrr') # string manipulation
library('forcats') # factor manipulation
library('lubridate') # date and time
library('forecast') # time series analysis
library('prophet') # time series analysis
train <- read_csv("~/GitHub/TimeSeries-Project/train_2.csv")
df = readRDS("~/GitHub/TimeSeries-Project/ProjectData.rds")
