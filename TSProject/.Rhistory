autolayer(lan_test_weekly,series = "SARIMA", color = "red")
cbind(lan,shen,jia)
ts.plot()
temp = cbind(lan,shen,jia)
ts.plot(temp)
# before Ts and train test split
ts.plot(lan)
acf(lan)
pacf(lan)
ts.plot(jia)
acf(jia)
pacf(jia)
ts.plot(shen)
acf(shen)
pacf(shen)
model_auto = auto.arima(lan_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto
lambda = model_auto$lambda[1]
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, lan_test_weekly)
autoplot(pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
eacf(jia_train_weekly)
#model_auto = auto.arima(jia_train_weekly, lambda = "auto", seasonal = TRUE)
model_auto = Arima(jia_train_weekly, lambda = "auto", order=c(1,1,2))
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 12)
accuracy(pred, jia_test_weekly)
autoplot(pred, include = 12)+
autolayer(jia_test_weekly,series = "SARIMA", color = "red")
df = readRDS("~/GitHub/TimeSeries-Project/TSProject/new_train.rds")
df1 = df[,10:12]
lan = as.numeric(df1[,1])
shen = as.numeric(df1[,3])
Acf(lan)
Acf(shen)
## use log rather than auto lambda
lan_train_weekly = window(lan_weekly, start = c(1,1), end = c(112,7))
lan_test_weekly = window(lan_weekly, start = c(113,1), end = c(115,5))
shen_train_weekly = window(shen_weekly, start = c(1,1), end = c(112,7))
shen_test_weekly = window(shen_weekly, start = c(113,1), end = c(115,5))
autoplot(lan_train_weekly)+
autolayer(lan_test_weekly)
jia_transformed = boxcox(jia_train_weekly)
Acf(lan)
lan_transformed = boxcox(lan_train_weekly)
lan_transformed = boxcox(lan_train_weekly)
lan_train_weekly
boxcox(lan_train_weekly)
lan_transformed = BoxCox(lan_train_weekly)
shen
View(df)
df = readRDS("~/GitHub/TimeSeries-Project/TSProject/new_train.rds")
df1 = df[,10:12]
append = as.numeric(df1[,1])
kidney = as.numeric(df1[,3])
df = readRDS("~/GitHub/TimeSeries-Project/TSProject/new_train.rds")
df1 = df[,10:12]
append = as.numeric(df1[,1])
kidney = as.numeric(df1[,3])
Acf(append)
Acf(kidney)
## use log rather than auto lambda
append_train_weekly = window(append_weekly, start = c(1,1), end = c(112,7))
append
## use log rather than auto lambda
append = ts(append, frequency = 7)
append
## use log rather than auto lambda
append_weekly = ts(append, frequency = 7)
kidney_weekly = ts(kidney, frequency = 7
## use log rather than auto lambda
append_weekly = ts(append, frequency = 7)
df = readRDS("~/GitHub/TimeSeries-Project/TSProject/new_train.rds")
df1 = df[,10:12]
append = as.numeric(df1[,1])
kidney = as.numeric(df1[,3])
Acf(append)
Acf(kidney)
## use log rather than auto lambda
append_weekly = ts(append, frequency = 7)
kidney_weekly = ts(kidney, frequency = 7)
append_train_weekly = window(append_weekly, start = c(1,1), end = c(112,7))
append_test_weekly  = window(append_weekly, start = c(113,1), end = c(115,5))
kidney_train_weekly = window(kidney_weekly, start = c(1,1), end = c(112,7))
kidney_test_weekly  = window(kidney_weekly, start = c(113,1), end = c(115,5))
autoplot(append_train_weekly)+
autolayer(append_test_weekly)
#Acf(append)
append_lambda = BoxCox.lambda(append_train_weekly)
append_transformed_train = BoxCox(append_train_weekly, lambda = append_lambda)
Acf(append_transformed_train)
Acf(append)
append_lambda = BoxCox.lambda(append_train_weekly)
append_transformed_train = BoxCox(append_train_weekly, lambda = append_lambda)
Acf(append_transformed_train)
#Acf(append_transformed_train)
Acf(append_transformed_train)
#Acf(append_transformed_train)
Acf(append)
append_lambda = BoxCox.lambda(append_train_weekly)
append_transformed_train = BoxCox(append_train_weekly, lambda = append_lambda)
autoplot(append_train_weekly)+
autolayer(append_test_weekly)
append_transformed_test = BoxCox(append_test_weekly, lambda = append_lambda)
autoplot(append_transformed_train)+
autolayer(append_transformed_test)
acf(diff(append_transformed_train))
ADF(append_transformed_train)
KPSS(append_transformed_train)
kpss.test(append_transformed_train)
adf.test(append_transformed_train)
kpss.test(append_transformed_train)
acf(diff(append_transformed_train))
kpss.test(append_transformed_train)
plot(diff(append_transformed_train))
decompose(append_transformed_train)
plot(decompose(append_transformed_train, type="additive"))
plot(decompose(append_train, type="additive"))
plot(decompose(append_train_weekly, type="additive"))
plot(decompose(append_train_weekly, type="multiplicative"))
plot(diff(append_transformed_train))
Acf(kidney)
kindey_lambda = BoxCox.lambda(kidney_train_weekly)
kindey_transformed_train = BoxCox(kidney_train_weekly, lambda = kindey_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidey_test_weekly)
Acf(kidney)
kindey_lambda = BoxCox.lambda(kidney_train_weekly)
kindey_transformed_train = BoxCox(kidney_train_weekly, lambda = kindey_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidney_test_weekly)
kidney_transformed_test = BoxCox(kindey_test_weekly, lambda = kindey_lambda)
Acf(kidney)
kindey_lambda = BoxCox.lambda(kidney_train_weekly)
kindey_transformed_train = BoxCox(kidney_train_weekly, lambda = kindey_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidney_test_weekly)
kidney_transformed_test = BoxCox(kindney_test_weekly, lambda = kindey_lambda)
Acf(kidney)
kindey_lambda = BoxCox.lambda(kidney_train_weekly)
kindey_transformed_train = BoxCox(kidney_train_weekly, lambda = kindey_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidney_test_weekly)
kidney_transformed_test = BoxCox(kidney_test_weekly, lambda = kindey_lambda)
autoplot(kindey_transformed_train)+
autolayer(kidney_transformed_test)
Acf(append)
append_lambda = BoxCox.lambda(append_train_weekly)
append_transformed_train = BoxCox(append_train_weekly, lambda = append_lambda)
autoplot(append_train_weekly)+
autolayer(append_test_weekly)
append_transformed_test = BoxCox(append_test_weekly, lambda = append_lambda)
autoplot(append_transformed_train)+
autolayer(append_transformed_test)
Acf(append)
append_lambda = BoxCox.lambda(append_train_weekly)
append_transformed_train = BoxCox(append_train_weekly, lambda = append_lambda)
autoplot(append_train_weekly)+
autolayer(append_test_weekly)
append_transformed_test = BoxCox(append_test_weekly, lambda = append_lambda)
autoplot(append_transformed_train)+
autolayer(append_transformed_test)
kpss.test(kidney_transformed_train) # level is not stationary
Acf(kidney)
kindey_lambda = BoxCox.lambda(kidney_train_weekly)
kindey_transformed_train = BoxCox(kidney_train_weekly, lambda = kindey_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidney_test_weekly)
kidney_transformed_test = BoxCox(kidney_test_weekly, lambda = kindey_lambda)
autoplot(kindey_transformed_train)+
autolayer(kidney_transformed_test)
kpss.test(kidney_transformed_train) # level is not stationary
Acf(kidney)
kidney_lambda = BoxCox.lambda(kidney_train_weekly)
kidney_transformed_train = BoxCox(kidney_train_weekly, lambda = kidney_lambda)
autoplot(kidney_train_weekly)+
autolayer(kidney_test_weekly)
kidney_transformed_test = BoxCox(kidney_test_weekly, lambda = kidney_lambda)
autoplot(kidney_transformed_train)+
autolayer(kidney_transformed_test)
kpss.test(kidney_transformed_train) # level is not stationary
adf.test(kidney_transformed_train)
decompose(kidney_transformed_train)
plot(diff(kidney_transformed_train))
plot(decompose(kidney_train_weekly, type="multiplicative"))
kpss.test(append_transformed_train) # level is not stationary
adf.test(append_transformed_train)
plot(diff(append_transformed_train))
plot(decompose(append_train_weekly, type="multiplicative"))
kpss.test(kidney_transformed_train) # level is not stationary
adf.test(kidney_transformed_train)
plot(diff(kidney_transformed_train))
kpss.test(diff(kidney_transformed_train))
adf.test(diff(kidney_transformed_train))
#plot(decompose(kidney_train_weekly, type="multiplicative"))
kpss.test(append_transformed_train) # level is not stationary
adf.test(append_transformed_train)
plot(diff(append_transformed_train))
kpss.test(diff(append_transformed_train)) # level is not stationary
adf.test(diff(append_transformed_train))
plot(decompose(append_train_weekly, type="multiplicative"))
adf.test(append_transformed_train)
kpss.test(append_transformed_train) # level is not stationary
plot(diff(append_transformed_train))
plot(decompose(append_train_weekly, type="multiplicative"))
adf.test(append_transformed_train) # small
kpss.test(append_transformed_train) # level is not stationary  big
plot(diff(append_transformed_train))
adf.test(diff(append_transformed_train)) # small
kpss.test(diff(append_transformed_train)) # level is not stationary  big
plot(decompose(append_train_weekly, type="multiplicative"))
plot(decompose(diff(append_train_weekly), type="multiplicative"))
adf.test(append_transformed_train) # small
kpss.test(append_transformed_train) # level is not stationary  big
plot(diff(append_transformed_train))
adf.test(diff(append_transformed_train)) # small
kpss.test(diff(append_transformed_train)) # level is not stationary  big
plot(decompose(diff(append_transformed_train), type="multiplicative"))
adf.test(append_transformed_train) # small
kpss.test(append_transformed_train) # level is not stationary  big
plot(diff(append_transformed_train))
adf.test(diff(append_transformed_train)) # small
kpss.test(diff(append_transformed_train)) # level is not stationary  big
#plot(decompose(diff(append_transformed_train), type="multiplicative"))
adf.test(append_transformed_train) # small
kpss.test(append_transformed_train) # level is not stationary  big
adf.test(diff(append_transformed_train)) # small
kpss.test(diff(append_transformed_train)) # level is not stationary  big
plot(diff(append_transformed_train))
#plot(decompose(append_transformed_train, type="multiplicative"))
adf.test(kidney_transformed_train)
kpss.test(kidney_transformed_train) # level is not stationary
adf.test(diff(diff(kidney_transformed_train)))
kpss.test(diff(diff(kidney_transformed_train)))
plot(diff(kidney_transformed_train))
#plot(decompose(kidney_train_weekly, type="multiplicative"))
ts.plot(append_transformed_train)
acf(append_transformed_train)
pacf(append_transformed_train)
ts.plot(diff(append_transformed_train))
acf(diff(append_transformed_train))
pacf(diff(append_transformed_train))
append_lambda
model_auto = auto.arima(append_transformed_train, d = 1, seasonal = TRUE)
model_auto
lambda
inv_pred = InvBoxCox(pred, lambda = append_lambda)
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred, lambda = append_lambda)
inv_pred = invBoxCox(pred, lambda = append_lambda)
inv_pred = invBoxCox(pred, lambda = append_lambda)
library(MASS)
inv_pred = invBoxCox(pred, lambda = append_lambda)
inv_pred = InvBoxCox(pred, lambda = append_lambda)
append_lambda
pred
inv_pred = InvBoxCox(pred$mean, lambda = append_lambda)
accuracy(pred, lan_test_weekly)
accuracy(pred, inv_pred)
accuracy(inv_pred, append_test_weekly)
model_auto = auto.arima(append_transformed_train, d = 1, seasonal = TRUE)
model_auto
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = append_lambda)
accuracy(inv_pred, append_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(lan_test_weekly,series = "SARIMA", color = "red")
autoplot(inv_pred, include = 100)+
autolayer(append_test_weekly,series = "SARIMA", color = "red")
series = "SARIMA",
autoplot(inv_pred, include = 100)+
autolayer(append_test_weekly, color = "red")
accuracy(inv_pred, append_test_weekly)
checkresiduals(model_auto)
eacf(append_transformed_train)
model_auto
eacf(append_transformed_train)
# Ljung-Box big
checkresiduals(model_auto)
autoplot(inv_pred, include = 100)+
autolayer(append_test_weekly, color = "red")
model_auto = auto.arima(kedney_transformed_train, d = 1, seasonal = TRUE)
model_auto = auto.arima(kidney_transformed_train, d = 1, seasonal = TRUE)
model_auto
#eacf(append_transformed_train)
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = auto.arima(kidney_transformed_train, d = 2, seasonal = TRUE)
model_auto
#eacf(append_transformed_train)
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = auto.arima(kidney_transformed_train, d = 0, seasonal = TRUE)
model_auto
#eacf(append_transformed_train)
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = auto.arima(kidney_transformed_train, seasonal = TRUE)
model_auto
eacf(kidney_transformed_train)
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = auto.arima(kidney_transformed_train,d = 1, seasonal = TRUE)
model_auto
eacf(kidney_transformed_train)
model_auto$coef
acf(model_auto$residuals)
pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
eacf(kidney_transformed_train)
model_auto = auto.arima(kidney_transformed_train,p= 1, q = 1, d = 1, seasonal = TRUE)
model_auto = Arima(kidney_transformed_train, order = c(1,1,1), seasonal = TRUE)
model_auto
model_auto = Arima(kidney_transformed_train, order = c(1,1,1), seasonal = c(0, 0,2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(1,1,2), seasonal = c(0, 0,2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(2,1,2), seasonal = c(0, 0,2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(3,1,2), seasonal = c(0, 0,2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(6,1,1), seasonal = c(0, 0,2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(1,1,4), seasonal = c(0, 0,2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(2,1,4), seasonal = c(0, 0, 2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(3,1,4), seasonal = c(0, 0, 2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(3,1,2), seasonal = c(0, 0, 2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(4,1,4), seasonal = c(0, 0, 2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(1,1,2), seasonal = c(0, 0, 2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
model_auto = Arima(kidney_transformed_train, order = c(1,1,2), seasonal = c(1, 0, 2))
model_auto
model_auto$coef
#acf(model_auto$residuals)
#pacf(model_auto$residuals)
# Ljung-Box big
checkresiduals(model_auto)
pred = forecast(model_auto, h = 19)
inv_pred = InvBoxCox(pred$mean, lambda = kidney_lambda)
accuracy(inv_pred, kidney_test_weekly)
autoplot(inv_pred, include = 100)+
autolayer(kidney_test_weekly, color = "red")
